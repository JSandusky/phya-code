

Specific issues:

- Don't create audio contacts between bodies with no audio bodies linked.

- Rationalize the gain / limiter paths to be easy to set up.
Should be an overall contact gain control post force limiting.
Rename ampMax Min to Force Max Min? mmmm


- Rationalize surface contact classes to incorporate.


- Integrate with true persistence of multiple contacts.

- Switch off either contacts or impacts completely.




Overview and alpha stage developments:

Partly the experimental parts are in the Phya library,
and partly in the integration code found in the examples.

Gain paths:

* = gain

SurfaceGen----*contactDirectGain-----> direct output  ,  ------> thisRes ,  -------*contactCrossGain------> crossRes

SurfaceGen:
contactForce ------*contactGain------> limit / min,  -------> fun ----> filter/gain --->  

Experimental state controlled with MACROS
See..
paAudio.hpp
_CcdPhysicsDemo_Phya.cpp
_CcdPhysicsDemo_Phya.h
paFunContactGen.cpp

Background:
In Bullet, manifolds persist, but don't have user data by default.
Manifold points persist for only a few frames usually, but do have user data.


Configurations:
The orginal default is to use PhyaUpdateCollisions() to process collisions.
MANIFOLDCOLLISION is undefined.
This works ok with RndSurface because it is stochastic and dosen't use state memory.

For surface generators with loose particle resonance, sample reading or impact detection, long-time persistence is important.
This is achieved for test purposes by allowing only one contact,
where persistence is guarrenteed.
(For multicontact persistence, either add userdata to manifold in bullet,
or use a hash function on body pairs, as in Golems).
MANIFOLDCOLLISION is defined, which forces NBODIES = 2  , so  1 contact
One from the following list:
IMPACTSAMPLE
WAVSURF    then one of PLASTIC, WATER, LEAVES
FREEPARTICLESURF   then one of GRAVEL1, GRAVEL2, FOIL, REEDS


